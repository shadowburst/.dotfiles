#!/usr/bin/env bash

if [[ $# -eq 1 ]]; then
  choice=$1
else
  directories=(~ ~/Repos)
  choice=$(
    find "${directories[@]}" \
      -mindepth 1 -maxdepth 1 \
      -type d -exec test -e '{}/.git' \; \
      -print |
      fzf \
        --preview="tree -a -L 1 -C --dirsfirst --sort=name --noreport {}"
  )
fi

if [[ -z $choice ]]; then
  exit 0
fi

session=$(basename "$choice" | tr . _)
editor=${EDITOR:-nvim}

if ! tmux has-session -t="$session" 2>/dev/null; then
  tmux new-session -ds "$session" -c "$choice" -n "$editor" "$editor; ${SHELL:-bash}"

  template_directory="$XDG_STATE_HOME/$USER/tmux/templates"
  state="$XDG_STATE_HOME/$USER/tmux/templates.json"
  if [[ ! -f "${state}" ]]; then
    mkdir -p "$(dirname $state)"
    echo "{}" >"${state}"
  fi
  if jq -e ".[\"${session}\"]" "${state}" >/dev/null; then
    template=$(jq -r ".[\"${session}\"]" "${state}")
  else
    template=$(
      echo -e "No template\n$(find -L $template_directory -type f -executable -printf "%f\n")" | fzf
    )
    jq ". + { \"${session}\": \"${template}\" }" "${state}" >"${state}.tmp"
    mv "${state}.tmp" "${state}"
  fi

  template_script="$template_directory/$template"
  if [[ -f $template_script ]]; then
    $template_script "$session"
  fi
fi

if [[ -n $TMUX ]]; then
  tmux switch-client -t "$session"
else
  tmux attach -t "$session"
fi
